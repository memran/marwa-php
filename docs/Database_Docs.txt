* configuration read
Config('app')['debug'];

* read environment variable
env('app','MarwApp'); // if not found

* get Base Url
base_url();

* session
** set Session variable
     session('name','emran');

** get Session Variable
    session('name');
** destroy a session
app('session')->destroy();

* set session flash data
setAlert('errMsg','Password is wrong','danger')
* get session flash data
getAlert('errMsg');

* redirect url
redirect("./");

* Logger Information
logger('This is log message',['test','123123']);

* return base path
base_path();
or
base_path('storage/log');

* return storage path
storage_path();
or
storage_path('logs/');

* return asset uri
asset(filename);

* generate a random number
generate(10);

* debug die
dd("it is debug");

* get current time
now()
* get CSRFToken
csrfToken();

name of form field must be
__csrf_value i.e
<input type="hidden" name="__csrf_value" value="<?=csrfToken();?>">

csrfMiddleware will take care everything!

* To access assets resources use this function
asset("css/main.css");


* Render a view
view('index',$data); //where data is variable to parse

//this is echo something
$this->e('It works');

this is function for language
$this->__('logo');

alternative language function
$this->lang('logo');

*form data parsing

for post method :
$usernmae=Input::post('username');

* for get method :
$username = Input::get('username');

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX


* Database configuration
Default, Read & Write Connections

 <?php
return [
      'default' => [
          'dsn' => 'mysql:host=127.0.0.1;dbname=marwadb',
          'username' => 'root',
          'password' => ''
      ],
      'read' => [
        'slave1' => [
              'dsn' => 'mysql:host=127.0.0.1;dbname=marwadb',
              'username' => 'root',
              'password' => ''
              ],
        'slave2' => [
              'dsn' => 'mysql:host=127.0.0.1;dbname=marwadb',
              'username' => 'root',
              'password' => ''
            ],
        'slave3' => [
              'dsn' => 'mysql:host=127.0.0.1;dbname=marwadb',
              'username' => 'root',
              'password' => ''
            ]
      ],
      'write' => [
        'master' => [
              'dsn' => 'mysql:host=127.0.0.1;dbname=marwadb',
              'username' => 'root',
              'password' => ''
                ]
            ]

];


  ?>
* To get default connection
DB::getDefault();

* To get specified read connection name
DB::getRead('slave1')->select(.....)

* To get specified write connection name
DB::getWrite('master')->select(.....)

*Running A Select Query
DB::select('select * from users');

* Using Named Bindings
$stm  = 'SELECT * FROM test WHERE foo = :foo AND bar = :bar';
$bind = array('foo' => 'baz', 'bar' => 'dib');

DB::select($stm,$bind);

* Running A Delete Statement

$r = DB::delete('DELETE FROM users where id =:id',['id'=> 1]);

*Running An Insert Statement
           $r= DB::insert('insert into users (username,password,name) values (:username, :password,:name)',
                        ['username'=>'admin2',
                        'password'=> 'admin2',
                        'name'=> "Mohammad Emran2"]);

* Running An Update Statement
  $r= DB::update('UPDATE users SET username=:username, password=:password WHERE id=:id',
                        ['username'=>'root',
                        'password'=> 'root',
                        'id'=> 4]);
*Running A General Statement
DB::query('drop table users');

* Handling Transaction
DB::beginTransaction();
DB::rollBack();
DB::commit();

* Automatic Transaction Handle
   DB::transaction(function(){
                  echo "I am here";
            });

